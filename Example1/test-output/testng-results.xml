<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="0" total="7" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="13007" started-at="2017-04-25T12:29:32Z" finished-at="2017-04-25T12:29:45Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="13007" started-at="2017-04-25T12:29:32Z" finished-at="2017-04-25T12:29:45Z">
      <class name="com.Example1.Company.ServiceLayerTest">
        <test-method status="PASS" signature="springTestContextBeforeTestClass()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestClass" is-config="true" duration-ms="16" started-at="2017-04-25T17:59:32Z" finished-at="2017-04-25T17:59:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestClass -->
        <test-method status="PASS" signature="springTestContextPrepareTestInstance()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextPrepareTestInstance" is-config="true" duration-ms="12007" started-at="2017-04-25T17:59:32Z" depends-on-methods="org.springframework.test.context.testng.AbstractTestNGSpringContextTests.springTestContextBeforeTestClass" finished-at="2017-04-25T17:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextPrepareTestInstance -->
        <test-method status="PASS" signature="testCreateEmployee()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="testCreateEmployee" duration-ms="141" started-at="2017-04-25T17:59:44Z" finished-at="2017-04-25T17:59:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testCreateEmployee -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:44Z" finished-at="2017-04-25T17:59:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testCreateEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:44Z" finished-at="2017-04-25T17:59:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testCreateEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testAddRoleForEmployee()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="testAddRoleForEmployee" duration-ms="359" started-at="2017-04-25T17:59:44Z" depends-on-methods="com.Example1.Company.ServiceLayerTest.testCreateEmployee" finished-at="2017-04-25T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddRoleForEmployee -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:44Z" finished-at="2017-04-25T17:59:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testAddRoleForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testAddRoleForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testFetchEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testFetchEmployee()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="testFetchEmployee" duration-ms="0" started-at="2017-04-25T17:59:45Z" depends-on-methods="com.Example1.Company.ServiceLayerTest.testCreateEmployee" finished-at="2017-04-25T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFetchEmployee -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testAddProjectForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testAddProjectForEmployee()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="testAddProjectForEmployee" duration-ms="218" started-at="2017-04-25T17:59:45Z" depends-on-methods="com.Example1.Company.ServiceLayerTest.testCreateEmployee" finished-at="2017-04-25T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddProjectForEmployee -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testFetchEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="testRemoveProjectForEmployee()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="testRemoveProjectForEmployee" duration-ms="47" started-at="2017-04-25T17:59:45Z" depends-on-methods="com.Example1.Company.ServiceLayerTest.testAddProjectForEmployee" finished-at="2017-04-25T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveProjectForEmployee -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testAddProjectForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testRemoveProjectForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="testRemoveRoleForEmployee()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="testRemoveRoleForEmployee" duration-ms="93" started-at="2017-04-25T17:59:45Z" depends-on-methods="com.Example1.Company.ServiceLayerTest.testAddRoleForEmployee" finished-at="2017-04-25T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testRemoveRoleForEmployee -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testRemoveRoleForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testRemoveProjectForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextBeforeTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextBeforeTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.deleteEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextBeforeTestMethod -->
        <test-method status="PASS" signature="deleteEmployee()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="deleteEmployee" duration-ms="47" started-at="2017-04-25T17:59:45Z" depends-on-methods="com.Example1.Company.ServiceLayerTest.testRemoveProjectForEmployee, com.Example1.Company.ServiceLayerTest.testRemoveRoleForEmployee" finished-at="2017-04-25T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- deleteEmployee -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.testRemoveRoleForEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestMethod(java.lang.reflect.Method)[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestMethod" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.Example1.Company.ServiceLayerTest.deleteEmployee()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestMethod -->
        <test-method status="PASS" signature="springTestContextAfterTestClass()[pri:0, instance:com.Example1.Company.ServiceLayerTest@23282c25]" name="springTestContextAfterTestClass" is-config="true" duration-ms="0" started-at="2017-04-25T17:59:45Z" finished-at="2017-04-25T17:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- springTestContextAfterTestClass -->
      </class> <!-- com.Example1.Company.ServiceLayerTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
